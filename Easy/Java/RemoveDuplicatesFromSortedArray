class Solution {
    public int removeDuplicates(int[] nums) {
        // Edge case: empty array
        if (nums.length == 0) {
            return 0;
        }
        
        // Pointer for the position of the last unique element
        int uniqueIndex = 0;

        // Traverse the array starting from the second element
        for (int i = 1; i < nums.length; i++) {
            // If the current element is not equal to the last unique element
            if (nums[i] != nums[uniqueIndex]) {
                uniqueIndex++; // Move the uniqueIndex forward
                nums[uniqueIndex] = nums[i]; // Update with the new unique element
            }
        }

        // Return the count of unique elements
        return uniqueIndex + 1;
    }
}